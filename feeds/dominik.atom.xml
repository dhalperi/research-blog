<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dan's research blog</title><link href="http://blog.halper.in/" rel="alternate"></link><link href="http://blog.halper.in/feeds/dominik.atom.xml" rel="self"></link><id>http://blog.halper.in/</id><updated>2014-12-23T00:00:00-08:00</updated><entry><title>Myria updates</title><link href="http://blog.halper.in/posts/2014/12/23/myria-updates/" rel="alternate"></link><updated>2014-12-23T00:00:00-08:00</updated><author><name>Daniel Halperin</name></author><id>tag:blog.halper.in,2014-12-23:posts/2014/12/23/myria-updates/</id><summary type="html">&lt;p&gt;Not much happening this week, what with the holidays. I took advantage of the break to handle some long-overdue code reviews and code improvements to Myria.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/coauth/jwang"&gt;Jingjing Wang&lt;/a&gt; has added resource profiling to Myria. We can now measure the resource consumption of each operator during query execution. (Unfortunately, these data are not yet available from the website.) See &lt;a href="https://github.com/uwescience/myria/pull/656"&gt;myria#656&lt;/a&gt; and &lt;a href="https://github.com/uwescience/myria-web/pull/241"&gt;myria-web#241&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/coauth/domoritz"&gt;Dominik Moritz&lt;/a&gt; implemented binary copy for Postgres. Database inserts are now substantially faster, especially for floating point or doubles where we could not use the &lt;code&gt;COPY&lt;/code&gt; mode before (turns out &lt;code&gt;double&lt;/code&gt; → &lt;code&gt;string&lt;/code&gt; → &lt;code&gt;double&lt;/code&gt; is not an identity-preserving transform. Duh.) See &lt;a href="https://github.com/uwescience/myria/pull/667"&gt;myria#667&lt;/a&gt; and &lt;a href="https://github.com/uwescience/myria/pull/669"&gt;myria#669&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dominik also improved the performance of the profiler using the new interface. &lt;a href="https://github.com/uwescience/myria/pull/672"&gt;myria#672&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/coauth/chushumo"&gt;Shumo Chu&lt;/a&gt; is getting Myria ready for Apache licensing — we just need to get rid of a few pesky &lt;span class="caps"&gt;GPL&lt;/span&gt;’ed dependencies. Tentatively, it looks like we have easy switch-in replacements that might also yield a bit faster query execution. &lt;a href="https://github.com/uwescience/myria/pull/658"&gt;myria#658&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I upgraded our continuous integration to Travis-&lt;span class="caps"&gt;CI&lt;/span&gt;’s new Docker-based containers. This lets us re-enable caching and also tests that execute multicore and faster! &lt;a href="https://github.com/uwescience/myria/pull/673"&gt;myria#673&lt;/a&gt; and &lt;a href="https://github.com/uwescience/myria/pull/674"&gt;myria#674&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As part of these upgrades I cleaned up and better tested several operators.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short: nothing much to see here, but Myria will hopefully work faster and better. One of Sophie’s sample queries &lt;a href="https://demo.myria.cs.washington.edu/queries?q=good_files_v4_profiled+%3D+0&amp;amp;max=59793&amp;amp;limit=2"&gt;sped up from 12m to 4m&lt;/a&gt;, and the 3x improvement is entirely due to the binary inserts!&lt;/p&gt;
&lt;p&gt;We have also begun interviewing candidates for the Myria software engineer position.&lt;/p&gt;</summary><category term="dominik"></category><category term="jingjing"></category><category term="shumo"></category><category term="myria"></category></entry><entry><title>Back from vacation</title><link href="http://blog.halper.in/posts/2014/11/10/back-from-vacation/" rel="alternate"></link><updated>2014-11-10T00:00:00-08:00</updated><author><name>Daniel Halperin</name></author><id>tag:blog.halper.in,2014-11-10:posts/2014/11/10/back-from-vacation/</id><summary type="html">&lt;p&gt;I was offline for the past two weeks, and it was glorious. I highly recommend it!&lt;/p&gt;
&lt;p&gt;Monday is meetings day.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/coauth/shrainik"&gt;Shrainik&lt;/a&gt;, &lt;a href="http://r.halper.in/coauth/billhowe"&gt;Bill&lt;/a&gt;, and I discussed our efforts (with &lt;a href="http://r.halper.in/coauth/domoritz"&gt;Dominik&lt;/a&gt;) to define and quantify the extent of variety in different datasets and understand how data management and integration systems help combat or even reduce this variety. The three of them wrote up our initial thoughts while I was gone, and now we are discussing next steps. As an aside, I am excited to repurpose their code to find all the crazy ways scientists use UDFs in SQLShare.&lt;/p&gt;
&lt;p&gt;We talked with &lt;a href="http://r.halper.in/coauth/bdmyers"&gt;Brandon&lt;/a&gt; about next steps for the failed submission on his Grappa work. By and large, the reviewers missed the boat — but that is our fault: what it really means is that we need to present the work better through organization, writing, and figures. We also discussed plans for generals and the relative pros and cons of literature review-style generals vs thesis proposal-style. In my opinion, a lit review would be more useful because Brandon’s work is so cross-disciplinary. The main counter-argument is that a thesis proposal might be more directly on the fast-path to graduation, and negotiations continue.&lt;/p&gt;
&lt;p&gt;In the Myria meeting, &lt;a href="http://homes.cs.washington.edu/~jwang/"&gt;Jingjing Wang&lt;/a&gt; showed off her improvements to launching, shutting down, and restarting Myria. Soon the production Myria demo will be much easier to kick when something goes funky. &lt;a href="https://github.com/lbrendanl"&gt;Brendan Lee&lt;/a&gt; has been documenting the Myria &lt;span class="caps"&gt;REST&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt; using &lt;a href="http://apiary.io"&gt;apiary.io&lt;/a&gt; and will be showing that off soon as well.&lt;/p&gt;
&lt;p&gt;In the &lt;span class="caps"&gt;UWDB&lt;/span&gt; paper seminar, &lt;a href="http://homes.cs.washington.edu/~sviyer/"&gt;Srini Iyer&lt;/a&gt; and &lt;a href="http://homes.cs.washington.edu/~prasang/"&gt;Prasang Upadhyaya&lt;/a&gt; presented the MadLINQ paper by Qian, et al. It was fun to see the theorists and the systems folks in the room discuss the relative tradeoffs between elegance and performance of the design. Some of these techniques are relatively straightforward techniques to implement in Myria, i.e. tiled matrix multiply with replication looks an awful lot like HyperCube shuffle with range-partitioning.&lt;/p&gt;</summary><category term="brandon"></category><category term="dominik"></category><category term="jingjing"></category><category term="shrainik"></category><category term="nyu"></category><category term="friere"></category></entry><entry><title>Myria security, ethnography</title><link href="http://blog.halper.in/posts/2014/10/15/myria-security-ethnography/" rel="alternate"></link><updated>2014-10-15T00:00:00-07:00</updated><author><name>Daniel Halperin</name></author><id>tag:blog.halper.in,2014-10-15:posts/2014/10/15/myria-security-ethnography/</id><summary type="html">&lt;p&gt;The newest Chrome update broke parts of &lt;a href="http://myria.cs.washington.edu"&gt;Myria&lt;/a&gt; because of new policies regarding security (&lt;span class="caps"&gt;HTTPS&lt;/span&gt;) in web &lt;span class="caps"&gt;API&lt;/span&gt; calls. So, I finally did the 5 hours of work it would take to make Myria’s &lt;span class="caps"&gt;API&lt;/span&gt; server support &lt;span class="caps"&gt;HTTPS&lt;/span&gt;, installed the certificate, and made all our deployment scripts. Now our users’ data (which is all publicly logged anyway) is much “safer” and, more importantly, the website works again.&lt;/p&gt;
&lt;p&gt;I sat down with the ethnographers who are observing the &lt;a href="http://data.uw.edu/incubator"&gt;Data Science Incubator&lt;/a&gt; — &lt;a href="http://fioresilfvast.org/"&gt;Brittany Fiore-Silvast&lt;/a&gt; and Anissa Tanweer — to chat about the parts of the Incubator process that happened before we looped them in. We discussed the internal planning, what happened in Spring and what we wanted to change, the applicant pool, the review process, and more. It was a fun chat and merely having the chat, plus their insightful questions, made me reflect more on the process and take a step back. &lt;/p&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/coauth/billhowe"&gt;Bill Howe&lt;/a&gt; and I met with &lt;a href="http://r.halper.in/coauth/shrainik"&gt;Shrainik Jain&lt;/a&gt; and &lt;a href="http://r.halper.in/coauth/domoritz"&gt;Dominik Moritz&lt;/a&gt; to discuss our project quantifying how much “variety” there is in different data systems and progress on the draft paper they have been writing. The basic idea is that we have an intuitive notion of “well-structured” databases (like the &lt;span class="caps"&gt;TPC&lt;/span&gt; benchmarks), and databases with “high variety” (like SQLShare), and we ought to be able to quantitatively find differences between them. &lt;span class="caps"&gt;SDSS&lt;/span&gt; should be a nice mid-point: it has many users asking potentially different questions, but their queries are limited to a well-defined, highly structured schema provided by the Skyserver team. Initial results are promising, and we are starting to put together a draft.&lt;/p&gt;</summary><category term="britta"></category><category term="anissa"></category><category term="dominik"></category><category term="shrainik"></category><category term="bill"></category><category term="myria"></category><category term="incubator"></category><category term="variety"></category><category term="ethnography"></category></entry><entry><title>Visualizations everywhere</title><link href="http://blog.halper.in/posts/2014/10/10/visualizations-everywhere/" rel="alternate"></link><updated>2014-10-10T00:00:00-07:00</updated><author><name>Daniel Halperin</name></author><id>tag:blog.halper.in,2014-10-10:posts/2014/10/10/visualizations-everywhere/</id><summary type="html">&lt;p&gt;&lt;a href="http://web.cecs.pdx.edu/~tufte/"&gt;Kristin Tufte&lt;/a&gt; from Portland State University came to &lt;span class="caps"&gt;UW&lt;/span&gt; today to visit some folks in transportation and to visit our eScience and Database groups. Most of the eScience students got to tell her about their work, and she and I discussed the Data Science Incubator and how to get undergrads involved. In her talk, she told us about S-Store, a streaming database with transactional support, and all about her work building &lt;a href="http://portal.its.pdx.edu/Portal/index.php/home/"&gt;Portal&lt;/a&gt; to manage, analyze, and visualize live traffic data on the Portland—Vancouver(&lt;span class="caps"&gt;WA&lt;/span&gt;) border in collaboration with &lt;span class="caps"&gt;ODOT&lt;/span&gt;, &lt;span class="caps"&gt;WSDOT&lt;/span&gt;, and related gov’ts. Fascinating, big, messy data problems everywhere, and great output viz.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/coauth/domoritz"&gt;Dominik Moritz&lt;/a&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; I chatted about his research on Myria’s profiler / query execution visualizer and the paper we hope to write about it this quarter. I have been logging a half-dozen ways in which the profiler has helped me debug and understand various system this summer and these use cases should help flesh out the paper.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://r.halper.in/people/cobbc12"&gt;Camille Cobb&lt;/a&gt; &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; I chatted about various projects for her relating to visualization of scientific datasets. We’re doing lit review and reading up on existing work, but I think we have the gist of two interesting, novel projects to go on.&lt;/p&gt;
&lt;p&gt;In my own time, I have been struggling with using &lt;a href="https://bitbucket.org/zzzeek/sqlalchemy"&gt;SQLAlchemy&lt;/a&gt; on Google App Engine to make Myria push work into an underlying &lt;span class="caps"&gt;DBMS&lt;/span&gt; and get much better performance on selective queries.&lt;/p&gt;</summary><category term="tufte"></category><category term="camille"></category><category term="dominik"></category><category term="myria"></category></entry><entry><title>2014-08-28 daily</title><link href="http://blog.halper.in/posts/2014/08/28/2014-08-28-daily/" rel="alternate"></link><updated>2014-08-28T00:00:00-07:00</updated><author><name>Daniel Halperin</name></author><id>tag:blog.halper.in,2014-08-28:posts/2014/08/28/2014-08-28-daily/</id><summary type="html">&lt;p&gt;We had our monthly &lt;a href="http://armbrustlab.ocean.washington.edu/resources/seaflow/"&gt;SeaFlow&lt;/a&gt;/eScience group meeting meeting. For this grant the oceanographers have been doing lots of new science using tools like &lt;a href="http://sqlshare.escience.washington.edu"&gt;SQLShare&lt;/a&gt;, &lt;a href="http://demo.myria.cs.washington.edu"&gt;Myria&lt;/a&gt;, and &lt;a href="https://github.com/uwescience/popcycle"&gt;popcycle&lt;/a&gt;, our software for storing indexing and analyzing SeaFlow data. We discussed needed improvements to popcycle and to the &lt;a href="https://github.com/uwescience/seaflow-viz"&gt;seaflow-viz&lt;/a&gt; web dashboard (see it here &lt;a href="https://uwescience.github.com/seaflow-viz"&gt;https://uwescience.github.com/seaflow-viz&lt;/a&gt;) for visualizing cruise performance and science in real time. &lt;a href="http://r.halper.in/coauth/sclayton"&gt;Sophie&lt;/a&gt; gave an update on the cruise she got back from a few weeks ago and on our work in the last two weeks analyzing cell diversity in Myria. &lt;a href="http://r.halper.in/coauth/fribalet"&gt;Francois&lt;/a&gt; gave an update on the new proposal we submitted to analyze population dynamics in SeaFlow data. Thinking ahead, we talked about &lt;a href="http://r.halper.in/coauth/swalwell"&gt;Jarred&lt;/a&gt;‘s agenda for scaling up SeaFlow data collection and what needs that would entail for automated instrument monitoring and the underlying data service; and we talked about how to demo “Myria for SeaFlow” to a broader audience.&lt;/p&gt;
&lt;p&gt;In the rest of the day, I worked on making &lt;a href="http://github.com/uwescience/raco"&gt;Raco&lt;/a&gt; better: adding some new optimization rules to streamline the types of plans that are emitted by the Flink compiler, and hacking/code reviewing with &lt;a href="http://r.halper.in/coauth/bdmyers"&gt;Brandon&lt;/a&gt; to get the &lt;a href="https://github.com/uwescience/raco/pull/269"&gt;MyriaL → Grappa support&lt;/a&gt; working better, and fixing a few little issues that cropped up.&lt;/p&gt;
&lt;p&gt;I also finally implemented, evaluated, and deployed the &lt;a href="https://github.com/uwescience/myria/pull/609"&gt;50x—100x speedup &lt;span class="caps"&gt;SQL&lt;/span&gt; query mod&lt;/a&gt; to the bottleneck query in &lt;a href="http://r.halper.in/coauth/domoritz"&gt;Dominik&lt;/a&gt;‘s fantastic Myria profiler. Now &lt;a href="https://demo.myria.cs.washington.edu/profile?queryId=32305"&gt;the profiling &lt;span class="caps"&gt;UI&lt;/span&gt; is super-snappy even for long programs&lt;/a&gt;.&lt;/p&gt;</summary><category term="myria"></category><category term="raco"></category><category term="seaflow"></category><category term="andrew"></category><category term="bill"></category><category term="brandon"></category><category term="dominik"></category><category term="francois"></category><category term="jarred"></category><category term="sophie"></category></entry></feed>